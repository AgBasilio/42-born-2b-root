pass: Qwerty1234
archivo log

virtualbox man: https://www.virtualbox.org/manual/topics/Introduction.html#virtintro

host > gest
 # Host = Máquina física (o el sistema operativo que ejecuta las máquinas virtuales)
 # Guest = Máquina virtual que corre dentro del host

debian doc:
https://www.debian.org/doc/
	-- instalation Guide https://www.debian.org/releases/stable/amd64/ (esp: https://www.debian.org/releases/stable/amd64/index.es.html)

hypervisor:
	** Software que permite la virtualización de un servidor físico, 
	dividiendo sus recursos como CPU, RAM y red. 
	El propósito principal es permitir que múltiples servidores virtuales operen 
	simultáneamente en una única máquina física.
	Es una capa de software que se sitúa encima del host informático y permite gestionar y ejecutar VMs.

Separate /home, /var and /tmp partitions
-- filesystem (FHS Filesystem Hierarchy Standard): https://refspecs.linuxfoundation.org/FHS_3.0/fhs/index.html
-- partitioning: https://wiki.archlinux.org/title/Partitioning
		- Separating out a path as a partition allows for the choice of a different filesystem and mount options. In some cases like a media partition, they can also 
		be shared between operating systems.
		- Separating out /home allows / to be re-partitioned separately
 - estability: the three of them can grow independently without compromising the stability of the system.
 - security: each can by configured independently to isolate and improve security
 - performance: different filesystems can be established for each and even mounted on different kinds of drives
	/		--> root partition. is the top of the hierarchy, the point where the primary filesystem is mounted and from which all other filesystems stem. All files and 
					directories appear under the root directory /, even if they are stored on different physical devices. The contents of the root filesystem must be 
					adequate to boot, restore, recover, and/or repair the system. Therefore, certain directories under / are not candidates for separate partitions. The root 
					partition is necessary and it is the most important. The other partitions can be replaced by it. (https://wiki.archlinux.org/title/Partitioning#/)
	/boot	--> is not required for normal system operation, but only during boot and kernel upgrades. (https://wiki.archlinux.org/title/Partitioning#/boot)
	/home 	--> 
		https://refspecs.linuxfoundation.org/FHS_3.0/fhs/ch03s08.html
		https://wiki.archlinux.org/title/Partitioning#/home
	/var	--> /var contains variable data files. If /var cannot be made a separate partition, it is often preferable to move /var out of the root partition and into the /usr 
		partition (https://refspecs.linuxfoundation.org/FHS_3.0/fhs/ch05.html). It exists to make it possible to mount /usr as read-only. (https://wiki.archlinux.org/title/Partitioning#/var)
	/temp	--> The /tmp directory must be made available for programs that require temporary files.
				Programs must not assume that any files or directories in /tmp are preserved between invocations of the program. (https://refspecs.linuxfoundation.org/FHS_3.0/fhs/ch03s18.html)

partition disc -> configure logical volume manager
use as: journaling file system (ext4)
	Journaling file system: keeps track of changes not yet committed to the file system's main part (https://en.wikipedia.org/wiki/Journaling_file_system)
	ext4: 
		(fourth extended filesystem) is a journaling file system for Linux, developed as the successor to ext3. 
		ext4 is a journaling file system, meaning it maintains a journal of operations not yet committed to disk, and is able to prevent some amount of data loss after a system crash or 
		power failure. If an ext4 filesystem is determined "unclean" on boot (traces of remaining operations in the journal), the system will run fsck and attempt to repair the filesystem, 
		and write uncommited blocks to the lost+found/ directory. At the very least, the filesystem will be restored to a working state.(https://wiki.debian.org/Ext4)

mount point: srv (When you install services like apache and ftp servers from rpms the default directory is /srv. Leave it there, but don't bother partitioning for it on a workstation (https://www.linuxquestions.org/questions/linux-newbie-8/what-is-the-srv-partition-and-do-i-need-one-227168/))
SELinux
AppArmor
LVM (https://wiki.archlinux.org/title/LVM)
	- (al menos dos particiones cifradas)
wall
cron
configurar particiones

aptitude vs apt
	-- aptitude: gestion avanzada de paquetes y resolucion de conflictos. CLI + interfaz visual (modo texto)
	-- apt: gestor de paquetes basico por defecto en Debian
	aptitude intalacion: 
		sudo apt update
		sudo apt install aptitude
	entrar en interfaz visual con: 
		sudo aptitude
	crear un alias para usar aptitude con el comando apt

que es systemctl? (system control) Utilidad para controlar systemd (system and service manager): provee una interfaz para inspeccionar y controlar
el estado del sistema.
systemctl [OPTIONS...] COMMAND [UNIT...]

SSH

	-- como funciona
archivo de configuracion de ssh: 				/etc/ssh/sshd_config
 -- service on 4242 port: 						Port 4242
 -- no conectarse como root a travez de SSH: 	PermitRootLogin no
 (set up port forwarding in Virtualbox)
 NAT: Network Address Translation
	allow multiple devices on a private network to share a single public IP address when accessing the internet or communicating outside the local network
 (check disponibilidad port:
	linux: ss -tuln | grep :<port>
				si no hay respuesta el puerto esta libre)
	netstat -aon | findstr :<port>
  ej: netstat -aon | findstr :4242)

 crear nuevo usuario

 UFW (Uncomplicated Firewall)
 	an application that aims to set rules in "iptables", the native firewall tables in Linux. Since iptables has a relatively complex syntax, 
	using UFW to configure it is a useful alternative without skimping on security
	-- what is and how to config: https://www.swhosting.com/en/comunidad/manual/what-is-the-ufw-firewall-and-how-to-configure-it-in-linux
	-- dejar solo el puerto 4242 abierto
		- ufw default deny incoming //Denies incoming connections that do not match any rule
		- default allow outgoing //Allow outgoing connections that do not match any rule
		- ufw allow 80 // Allow incoming connections through port 80 (in this case port 4242)
		- ufw enable // activate the firewall and all the rules defined.
	ss -tuln //-t: TCP -u: UDP -l: listening -n: Don't resolve names | check inbound ports
	sudo ufw status verbose //check ufu status

hostname: [usr]42
	-- como modificar el hostname? 
		--- cortito y al pie: https://www.redhat.com/en/blog/configure-hostname-linux
			$ hostnamectl set-hostname nombre_host_name
			or directly modify the default configuration file /etc/hostname.
		--- mas explicado: https://cyberpanel.net/blog/linux-change-hostname

politica de password: (https://ostechnix.com/how-to-set-password-policies-in-linux/)
	-- implementar politica: (/etc/login.defs)
		-- debe expirar cada:									30 	dias	==> PASS_MAX_DAYS	30
		-- min dias para antes de modificar una contrasenna:	2 	dias	==> PASS_MIN_DAYS	2
		-- antelacion aviso antes de expirar password:			7	dias	==> PASS_MAX_DAYS	7 (default)
		## estos cambios solo aplican a usuarios nuevos, porque login.defs define los valores predeterminados que se utilizan al crear un nuevo usuario.
			# los usuarios existentes deben modificarse manualmente:
					(chage - change user password expiry information)
				- sudo chage -M 30 -m 2 nombre_de_usuario (abasilio | root)
				- chage -l nombre_de_usuario (abasilio | root)
           Show account aging information.
		-- password (/etc/pam.d/common-password) (PAM: Pluggable Authentication Modules)
					pam_unix.so (man pam_unix.so): the standard Unix authentication module
				change: password        [success=1 default=ignore]      pam_unix.so obscure yescrypt
				to:	password        [success=1 default=ignore]      pam_unix.so obscure yescrypt minlen=10
			- min:
				- 10 caracteres	==> minlen=10 (exist for pam_unix.so but since pam_pwquality is already installed it's better to move it)
				- 1 mayus		==>	 (pkg libpam-pwquality 		==> minclass = 3: require 3 clases (other, upper, lower and digit)) || ucredit=-1
				- 1 minuscula	==>		'' || lcredit=-1
				- 1 numero		==>		'' || dcredit=-1
			- No mas de 3 veces consecutivas el mismo caracter	==>	(pkg libpam-pwquality | pam_pwquality.so ==> maxrepeat = 3)
			- no puede contener el nombre de usuario			==>	(pkg libpam-pwquality ==> usercheck = 1)
			- (no aplica a root) al menos 7 caracteres no tienen que ser parte de la antigua contrasenna 	==> difok=7 (no aplica a root. man: 'The module will 
																														return error on failed check even if the user changing the password 
																														is root. This option is off by default which means that just the 
																														message about the failed check is printed but root can change the 
																														password anyway. Note that root is not asked for an old password so 
																														the checks that compare the old and new password are not performed')
		/etc/pam.d/common-password:
			
			password requisite pam_pwquality.so retry=3 difok=7 minlen=10 dcredit=-1 ucredit=-1 lcredit=-1 maxrepeat=3 usercheck=1 enforce_for_root
			password [success=1 default=ignore] pam_unix.so obscure yescrypt
		
		(pam_pwquality.so is executed and then, if successful, pam_unix.so is executed)
		(requisite means: if unsuccessful, abort and do not attempt the following modules)
		TEST:
			to short:
				Pa55word
				Qwerty1!
				Abc123
			no numb:
				PasswordLong
				PasswordLong!
				SecurePassOnly
				SecureP@ssOnly
				JustLettersOK
			no mayus:
				password123
				securepass10
				minimallower10
			no min:
				PASSWORD123
				SECURE456
				NUMBERSUPPER
			repeated chars:
				Aaaabbbb123
				1111Secure
				PPPPass123
			contains user:
				abasilio1Pass
				1abasilioP
				P1abasilio
			difok=7 (PasswordLong1)
				PasswordLong2
				P@sswordLong1
				P@22W0rDL0 (funciona? si)
			
			N3wSecure2!



SUDO (https://wiki.debian.org/es/sudo)
programa diseñado para facilitar a los administradores del sistema permitir a algunos usuarios ejecutar órdenes como root (u otro usuario). (...) permitir a las personas 
realizar su trabajo otorgándoles los mínimos privilegios posibles

	-- instalar
		apt install sudo
	-- configurar
		- $visudo  : open the config file
		(El sistema lee los grupos de cada usuario al ingresar por lo que tras añadirle a un grupo el usuario tiene que salir y reingresar para hacer efectiva su nueva membresía.)
		-- reglas (https://www.geeksforgeeks.org/useful-sudoers-configurations-for-setting-sudo-in-linux/)
			- autentificacion limitado a 3 intentos con password incorrecta
				Defaults        passwd_tries=3
			- mostrar mensaje personalizado al introducir password incorrecto
				Defaults        badpass_message="bad password. try again, if you can :D"
			- input y output logged en /var/log/sudo/
				Defaults        logfile=/var/log/sudo/sudo.log   ==> summary logs
				Defaults        log_input
				Defaults        log_output
				Defaults        iolog_dir=/var/log/sudo
					sudoreplay -l -d /var/log/sudo        : list available sessions, to replay one. Then, sudoreplay <tsid>
					sudoreplay -d /var/log/sudo <tsid>    : replays the output
			- TTY activado
				- TTY in Unix is from teletypewriter
					Defaults        requiretty
			- los directorios utilizables por sudo deben estar restringidos
				Defaults        secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"

usuario
	-- crear usuario
	-- agregar a grupo (user42 y sudo)
	# sudo adduser otrousuario -G sudo //crea el usuario y lo agrega al grupo sudo

grupos (https://wiki.debian.org/SystemGroups)
	-- crear grupo
		$ groupadd user42 // create a new group
	- To print the groups for another user: $ groups $username
	- To add a user to a group, as root: # adduser $username $groupname
	- as a user with sudo permissions: $ sudo adduser $username $groupname
	- and using the usermod command: $ sudo usermod -a -G $groupname $username

wall:
	https://labex.io/tutorials/linux-linux-wall-command-with-practical-examples-423001
crontab
	crontab  is  the  program  used  to  install,  deinstall  or  list  the  tables  used  to  drive  the  cron(8)  daemon  in Vixie Cron.
	crontab - tables for driving cron. A crontab file contains instructions to the cron(8) daemon of the general form: ``run this command at this time on this date''.
	cron - daemon to execute scheduled commands (Vixie Cron)
crear script en bash
	-- nombre: monitoring.sh
	-- ejecutar cada 10 mins desde que se inicie el server (wall)
		- el escript de mostrar:
			- arquitectura del OS y la version del kernel
			- numero de nucleos fisicos
			- numero de nucleos virtuales
			- la memoria RAM disponible y el porcentaje de uso
			- la memoria disponible y el porcentaje de uso (HD?)
			- el porcentaje de uso de los nucleos
			- fecha y hora del ultimo reinicio
			- si LVM esta o no activo
			- numero de conexiones activas
			- num de usuarios del servidor
			- la ipv4 y mac del servidor
			- el numero de commandos ejecutados con sudo

una vez todo configurado en la vm
	- configurar save state para esa vm en virtual box
		- esto es para que no se altere la maquina luego de cada uso al realizar las evaluaciones
	- crear el archivo "signature.txt" con sha1 sobre el archivo .vdi de la vm creada
		- (sha1sum [vmname].vdi)


comando generales para tener en cuenta: https://kinsta.com/es/blog/linux-comandos/